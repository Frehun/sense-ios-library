// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		3E0171D415878B9400857B7A /* CommonSense.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3E0171D215878B9400857B7A /* CommonSense.plist */; };
		3E0171D515878B9400857B7A /* Settings.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3E0171D315878B9400857B7A /* Settings.plist */; };
		3E22A48A1588CFC6001A9318 /* SBJsonWriter.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A93615879B40007AD39D /* SBJsonWriter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A95415879BE9007AD39D /* NSObject+SBJson.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A92015879B40007AD39D /* NSObject+SBJson.m */; };
		3E61A95515879BF7007AD39D /* SBJsonParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A92315879B40007AD39D /* SBJsonParser.m */; };
		3E61A95615879BFB007AD39D /* SBJsonStreamParser.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A92515879B40007AD39D /* SBJsonStreamParser.m */; };
		3E61A95715879BFF007AD39D /* SBJsonStreamParserAccumulator.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A92715879B40007AD39D /* SBJsonStreamParserAccumulator.m */; };
		3E61A95815879C03007AD39D /* SBJsonStreamParserAdapter.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A92915879B40007AD39D /* SBJsonStreamParserAdapter.m */; };
		3E61A95A15879C0C007AD39D /* SBJsonStreamWriter.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A92D15879B40007AD39D /* SBJsonStreamWriter.m */; };
		3E61A95B15879C0F007AD39D /* SBJsonStreamWriterAccumulator.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A92F15879B40007AD39D /* SBJsonStreamWriterAccumulator.m */; };
		3E61A95C15879C13007AD39D /* SBJsonStreamWriterState.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A93115879B40007AD39D /* SBJsonStreamWriterState.m */; };
		3E61A95D15879C16007AD39D /* SBJsonTokeniser.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A93315879B40007AD39D /* SBJsonTokeniser.m */; };
		3E61A95F15879C1D007AD39D /* SBJsonWriter.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A93715879B40007AD39D /* SBJsonWriter.m */; };
		3E61A96015879C34007AD39D /* NSObject+SBJson.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A91F15879B40007AD39D /* NSObject+SBJson.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96115879C38007AD39D /* SBJson.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A92115879B40007AD39D /* SBJson.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96215879C3D007AD39D /* SBJsonParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A92215879B40007AD39D /* SBJsonParser.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96315879C41007AD39D /* SBJsonStreamParser.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A92415879B40007AD39D /* SBJsonStreamParser.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96415879C46007AD39D /* SBJsonStreamParserAccumulator.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A92615879B40007AD39D /* SBJsonStreamParserAccumulator.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96515879C4B007AD39D /* SBJsonStreamParserAdapter.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A92815879B40007AD39D /* SBJsonStreamParserAdapter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96615879C54007AD39D /* SBJsonStreamParserState.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A92A15879B40007AD39D /* SBJsonStreamParserState.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96715879C5A007AD39D /* SBJsonStreamWriter.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A92C15879B40007AD39D /* SBJsonStreamWriter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96815879C62007AD39D /* SBJsonStreamWriterAccumulator.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A92E15879B40007AD39D /* SBJsonStreamWriterAccumulator.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96915879C66007AD39D /* SBJsonStreamWriterState.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A93015879B40007AD39D /* SBJsonStreamWriterState.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96A15879C81007AD39D /* SBJsonTokeniser.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A93215879B40007AD39D /* SBJsonTokeniser.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96B15879C94007AD39D /* JSON.h in Headers */ = {isa = PBXBuildFile; fileRef = 3E61A95115879B85007AD39D /* JSON.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3E61A96C15879D65007AD39D /* SBJsonStreamParserState.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A92B15879B40007AD39D /* SBJsonStreamParserState.m */; };
		3E61A96D15879D7D007AD39D /* SBJsonUTF8Stream.m in Sources */ = {isa = PBXBuildFile; fileRef = 3E61A93515879B40007AD39D /* SBJsonUTF8Stream.m */; };
		3EAA8554158778290036ACC4 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 3EAA8553158778290036ACC4 /* Foundation.framework */; };
		3EAA8567158778290036ACC4 /* SenTestingKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 3EAA8566158778290036ACC4 /* SenTestingKit.framework */; };
		3EAA856A158778290036ACC4 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 3EAA8553158778290036ACC4 /* Foundation.framework */; };
		3EAA8574158778290036ACC4 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 3EAA8572158778290036ACC4 /* InfoPlist.strings */; };
		3EAA8577158778290036ACC4 /* sense_platformTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 3EAA8576158778290036ACC4 /* sense_platformTests.m */; };
		3ED8926A158789D9006D87F7 /* ApplicationStateChange.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8925D158789D9006D87F7 /* ApplicationStateChange.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3ED89272158789D9006D87F7 /* SensePlatform.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED89266158789D9006D87F7 /* SensePlatform.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3ED89273158789D9006D87F7 /* Sensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED89267158789D9006D87F7 /* Sensor.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3ED89274158789D9006D87F7 /* SensorIds.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED89268158789D9006D87F7 /* SensorIds.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3ED89275158789D9006D87F7 /* Settings.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED89269158789D9006D87F7 /* Settings.h */; settings = {ATTRIBUTES = (Public, ); }; };
		3ED892D015878AF9006D87F7 /* ApplicationStateChange.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8928A15878AF9006D87F7 /* ApplicationStateChange.m */; };
		3ED892D115878AF9006D87F7 /* ActivitySender.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8928C15878AF9006D87F7 /* ActivitySender.h */; };
		3ED892D215878AF9006D87F7 /* ActivitySender.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8928D15878AF9006D87F7 /* ActivitySender.m */; };
		3ED892D315878AF9006D87F7 /* NSString+MD5Hash.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8928E15878AF9006D87F7 /* NSString+MD5Hash.h */; };
		3ED892D415878AF9006D87F7 /* NSString+MD5Hash.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8928F15878AF9006D87F7 /* NSString+MD5Hash.m */; };
		3ED892D515878AF9006D87F7 /* Sender.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8929015878AF9006D87F7 /* Sender.h */; };
		3ED892D615878AF9006D87F7 /* Sender.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8929115878AF9006D87F7 /* Sender.m */; };
		3ED892D715878AF9006D87F7 /* DataStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8929215878AF9006D87F7 /* DataStore.h */; };
		3ED892D815878AF9006D87F7 /* NSNotificationCenter+MainThread.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8929415878AF9006D87F7 /* NSNotificationCenter+MainThread.h */; };
		3ED892D915878AF9006D87F7 /* NSNotificationCenter+MainThread.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8929515878AF9006D87F7 /* NSNotificationCenter+MainThread.m */; };
		3ED892DA15878AF9006D87F7 /* Reachability.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8929615878AF9006D87F7 /* Reachability.h */; };
		3ED892DB15878AF9006D87F7 /* Reachability.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8929715878AF9006D87F7 /* Reachability.m */; };
		3ED892DC15878AF9006D87F7 /* SensePlatform.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8929815878AF9006D87F7 /* SensePlatform.m */; };
		3ED892DD15878AF9006D87F7 /* SensorIds.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8929915878AF9006D87F7 /* SensorIds.m */; };
		3ED892DE15878AF9006D87F7 /* Acceleration.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8929B15878AF9006D87F7 /* Acceleration.h */; };
		3ED892DF15878AF9006D87F7 /* Acceleration.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8929C15878AF9006D87F7 /* Acceleration.m */; };
		3ED892E015878AF9006D87F7 /* AccelerationSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8929D15878AF9006D87F7 /* AccelerationSensor.h */; };
		3ED892E115878AF9006D87F7 /* AccelerationSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED8929E15878AF9006D87F7 /* AccelerationSensor.m */; };
		3ED892E215878AF9006D87F7 /* AccelerometerSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED8929F15878AF9006D87F7 /* AccelerometerSensor.h */; };
		3ED892E315878AF9006D87F7 /* AccelerometerSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892A015878AF9006D87F7 /* AccelerometerSensor.m */; };
		3ED892E415878AF9006D87F7 /* AntPlusController.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892A215878AF9006D87F7 /* AntPlusController.h */; };
		3ED892E515878AF9006D87F7 /* AntPlusController.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892A315878AF9006D87F7 /* AntPlusController.m */; };
		3ED892E615878AF9006D87F7 /* BloodPressureSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892A415878AF9006D87F7 /* BloodPressureSensor.h */; };
		3ED892E715878AF9006D87F7 /* BloodPressureSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892A515878AF9006D87F7 /* BloodPressureSensor.m */; };
		3ED892E815878AF9006D87F7 /* FootpodSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892A615878AF9006D87F7 /* FootpodSensor.h */; };
		3ED892E915878AF9006D87F7 /* FootpodSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892A715878AF9006D87F7 /* FootpodSensor.m */; };
		3ED892EA15878AF9006D87F7 /* BatterySensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892A815878AF9006D87F7 /* BatterySensor.h */; };
		3ED892EB15878AF9006D87F7 /* BatterySensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892A915878AF9006D87F7 /* BatterySensor.m */; };
		3ED892EC15878AF9006D87F7 /* CallSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892AA15878AF9006D87F7 /* CallSensor.h */; };
		3ED892ED15878AF9006D87F7 /* CallSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892AB15878AF9006D87F7 /* CallSensor.m */; };
		3ED892EE15878AF9006D87F7 /* CompassSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892AC15878AF9006D87F7 /* CompassSensor.h */; };
		3ED892EF15878AF9006D87F7 /* CompassSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892AD15878AF9006D87F7 /* CompassSensor.m */; };
		3ED892F015878AF9006D87F7 /* ConnectionSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892AE15878AF9006D87F7 /* ConnectionSensor.h */; };
		3ED892F115878AF9006D87F7 /* ConnectionSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892AF15878AF9006D87F7 /* ConnectionSensor.m */; };
		3ED892F215878AF9006D87F7 /* DynamicSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892B015878AF9006D87F7 /* DynamicSensor.h */; };
		3ED892F315878AF9006D87F7 /* DynamicSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892B115878AF9006D87F7 /* DynamicSensor.m */; };
		3ED892F415878AF9006D87F7 /* JumpSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892B215878AF9006D87F7 /* JumpSensor.h */; };
		3ED892F515878AF9006D87F7 /* JumpSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892B315878AF9006D87F7 /* JumpSensor.m */; };
		3ED892F615878AF9006D87F7 /* LocationSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892B415878AF9006D87F7 /* LocationSensor.h */; };
		3ED892F715878AF9006D87F7 /* LocationSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892B515878AF9006D87F7 /* LocationSensor.m */; };
		3ED892F815878AF9006D87F7 /* MiscSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892B615878AF9006D87F7 /* MiscSensor.h */; };
		3ED892F915878AF9006D87F7 /* MiscSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892B715878AF9006D87F7 /* MiscSensor.m */; };
		3ED892FA15878AF9006D87F7 /* MotionEnergySensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892B815878AF9006D87F7 /* MotionEnergySensor.h */; };
		3ED892FB15878AF9006D87F7 /* MotionEnergySensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892B915878AF9006D87F7 /* MotionEnergySensor.m */; };
		3ED892FC15878AF9006D87F7 /* MotionFeaturesSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892BA15878AF9006D87F7 /* MotionFeaturesSensor.h */; };
		3ED892FD15878AF9006D87F7 /* MotionFeaturesSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892BB15878AF9006D87F7 /* MotionFeaturesSensor.m */; };
		3ED892FE15878AF9006D87F7 /* MovingSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892BC15878AF9006D87F7 /* MovingSensor.h */; };
		3ED892FF15878AF9006D87F7 /* MovingSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892BD15878AF9006D87F7 /* MovingSensor.m */; };
		3ED8930015878AF9006D87F7 /* NoiseSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892BE15878AF9006D87F7 /* NoiseSensor.h */; };
		3ED8930115878AF9006D87F7 /* NoiseSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892BF15878AF9006D87F7 /* NoiseSensor.m */; };
		3ED8930215878AF9006D87F7 /* OrientationSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892C015878AF9006D87F7 /* OrientationSensor.h */; };
		3ED8930315878AF9006D87F7 /* OrientationSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892C115878AF9006D87F7 /* OrientationSensor.m */; };
		3ED8930415878AF9006D87F7 /* OrientationStateSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892C215878AF9006D87F7 /* OrientationStateSensor.h */; };
		3ED8930515878AF9006D87F7 /* OrientationStateSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892C315878AF9006D87F7 /* OrientationStateSensor.m */; };
		3ED8930615878AF9006D87F7 /* PreferencesSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892C415878AF9006D87F7 /* PreferencesSensor.h */; };
		3ED8930715878AF9006D87F7 /* PreferencesSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892C515878AF9006D87F7 /* PreferencesSensor.m */; };
		3ED8930815878AF9006D87F7 /* RotationSensor.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892C615878AF9006D87F7 /* RotationSensor.h */; };
		3ED8930915878AF9006D87F7 /* RotationSensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892C715878AF9006D87F7 /* RotationSensor.m */; };
		3ED8930A15878AF9006D87F7 /* Sensor.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892C815878AF9006D87F7 /* Sensor.m */; };
		3ED8930B15878AF9006D87F7 /* SpatialProvider.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892C915878AF9006D87F7 /* SpatialProvider.h */; };
		3ED8930C15878AF9006D87F7 /* SpatialProvider.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892CA15878AF9006D87F7 /* SpatialProvider.m */; };
		3ED8930D15878AF9006D87F7 /* UserProximity.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892CB15878AF9006D87F7 /* UserProximity.h */; };
		3ED8930E15878AF9006D87F7 /* UserProximity.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892CC15878AF9006D87F7 /* UserProximity.m */; };
		3ED8930F15878AF9006D87F7 /* SensorStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 3ED892CD15878AF9006D87F7 /* SensorStore.h */; };
		3ED8931015878AF9006D87F7 /* SensorStore.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892CE15878AF9006D87F7 /* SensorStore.m */; };
		3ED8931115878AF9006D87F7 /* Settings.m in Sources */ = {isa = PBXBuildFile; fileRef = 3ED892CF15878AF9006D87F7 /* Settings.m */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		3EAA856B158778290036ACC4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 3EAA8546158778290036ACC4 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 3EAA8551158778290036ACC4;
			remoteInfo = "sense platform";
		};
		3EAA856D158778290036ACC4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 3EAA8546158778290036ACC4 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 3EAA8551158778290036ACC4;
			remoteInfo = "sense platform";
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		3E0171D215878B9400857B7A /* CommonSense.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = CommonSense.plist; sourceTree = "<group>"; };
		3E0171D315878B9400857B7A /* Settings.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Settings.plist; sourceTree = "<group>"; };
		3E0171D8158790B700857B7A /* SensePlatform-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "SensePlatform-Info.plist"; sourceTree = "<group>"; };
		3E61A91F15879B40007AD39D /* NSObject+SBJson.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSObject+SBJson.h"; sourceTree = "<group>"; };
		3E61A92015879B40007AD39D /* NSObject+SBJson.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSObject+SBJson.m"; sourceTree = "<group>"; };
		3E61A92115879B40007AD39D /* SBJson.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJson.h; sourceTree = "<group>"; };
		3E61A92215879B40007AD39D /* SBJsonParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonParser.h; sourceTree = "<group>"; };
		3E61A92315879B40007AD39D /* SBJsonParser.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonParser.m; sourceTree = "<group>"; };
		3E61A92415879B40007AD39D /* SBJsonStreamParser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonStreamParser.h; sourceTree = "<group>"; };
		3E61A92515879B40007AD39D /* SBJsonStreamParser.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonStreamParser.m; sourceTree = "<group>"; };
		3E61A92615879B40007AD39D /* SBJsonStreamParserAccumulator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonStreamParserAccumulator.h; sourceTree = "<group>"; };
		3E61A92715879B40007AD39D /* SBJsonStreamParserAccumulator.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonStreamParserAccumulator.m; sourceTree = "<group>"; };
		3E61A92815879B40007AD39D /* SBJsonStreamParserAdapter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonStreamParserAdapter.h; sourceTree = "<group>"; };
		3E61A92915879B40007AD39D /* SBJsonStreamParserAdapter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonStreamParserAdapter.m; sourceTree = "<group>"; };
		3E61A92A15879B40007AD39D /* SBJsonStreamParserState.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonStreamParserState.h; sourceTree = "<group>"; };
		3E61A92B15879B40007AD39D /* SBJsonStreamParserState.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonStreamParserState.m; sourceTree = "<group>"; };
		3E61A92C15879B40007AD39D /* SBJsonStreamWriter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonStreamWriter.h; sourceTree = "<group>"; };
		3E61A92D15879B40007AD39D /* SBJsonStreamWriter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonStreamWriter.m; sourceTree = "<group>"; };
		3E61A92E15879B40007AD39D /* SBJsonStreamWriterAccumulator.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonStreamWriterAccumulator.h; sourceTree = "<group>"; };
		3E61A92F15879B40007AD39D /* SBJsonStreamWriterAccumulator.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonStreamWriterAccumulator.m; sourceTree = "<group>"; };
		3E61A93015879B40007AD39D /* SBJsonStreamWriterState.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonStreamWriterState.h; sourceTree = "<group>"; };
		3E61A93115879B40007AD39D /* SBJsonStreamWriterState.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonStreamWriterState.m; sourceTree = "<group>"; };
		3E61A93215879B40007AD39D /* SBJsonTokeniser.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonTokeniser.h; sourceTree = "<group>"; };
		3E61A93315879B40007AD39D /* SBJsonTokeniser.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonTokeniser.m; sourceTree = "<group>"; };
		3E61A93415879B40007AD39D /* SBJsonUTF8Stream.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonUTF8Stream.h; sourceTree = "<group>"; };
		3E61A93515879B40007AD39D /* SBJsonUTF8Stream.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonUTF8Stream.m; sourceTree = "<group>"; };
		3E61A93615879B40007AD39D /* SBJsonWriter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SBJsonWriter.h; sourceTree = "<group>"; };
		3E61A93715879B40007AD39D /* SBJsonWriter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SBJsonWriter.m; sourceTree = "<group>"; };
		3E61A95115879B85007AD39D /* JSON.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = JSON.h; sourceTree = "<group>"; };
		3EAA8553158778290036ACC4 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		3EAA8564158778290036ACC4 /* SensePlatformTests.octest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = SensePlatformTests.octest; sourceTree = BUILT_PRODUCTS_DIR; };
		3EAA8566158778290036ACC4 /* SenTestingKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SenTestingKit.framework; path = Library/Frameworks/SenTestingKit.framework; sourceTree = DEVELOPER_DIR; };
		3EAA8571158778290036ACC4 /* SensePlatformTests-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "SensePlatformTests-Info.plist"; sourceTree = "<group>"; };
		3EAA8573158778290036ACC4 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		3EAA8575158778290036ACC4 /* sense_platformTests.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = sense_platformTests.h; sourceTree = "<group>"; };
		3EAA8576158778290036ACC4 /* sense_platformTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = sense_platformTests.m; sourceTree = "<group>"; };
		3ED8925D158789D9006D87F7 /* ApplicationStateChange.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ApplicationStateChange.h; sourceTree = "<group>"; };
		3ED89266158789D9006D87F7 /* SensePlatform.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SensePlatform.h; sourceTree = "<group>"; };
		3ED89267158789D9006D87F7 /* Sensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Sensor.h; sourceTree = "<group>"; };
		3ED89268158789D9006D87F7 /* SensorIds.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SensorIds.h; sourceTree = "<group>"; };
		3ED89269158789D9006D87F7 /* Settings.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Settings.h; sourceTree = "<group>"; };
		3ED8928A15878AF9006D87F7 /* ApplicationStateChange.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ApplicationStateChange.m; sourceTree = "<group>"; };
		3ED8928C15878AF9006D87F7 /* ActivitySender.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ActivitySender.h; sourceTree = "<group>"; };
		3ED8928D15878AF9006D87F7 /* ActivitySender.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ActivitySender.m; sourceTree = "<group>"; };
		3ED8928E15878AF9006D87F7 /* NSString+MD5Hash.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSString+MD5Hash.h"; sourceTree = "<group>"; };
		3ED8928F15878AF9006D87F7 /* NSString+MD5Hash.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSString+MD5Hash.m"; sourceTree = "<group>"; };
		3ED8929015878AF9006D87F7 /* Sender.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Sender.h; sourceTree = "<group>"; };
		3ED8929115878AF9006D87F7 /* Sender.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Sender.m; sourceTree = "<group>"; };
		3ED8929215878AF9006D87F7 /* DataStore.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DataStore.h; sourceTree = "<group>"; };
		3ED8929415878AF9006D87F7 /* NSNotificationCenter+MainThread.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSNotificationCenter+MainThread.h"; sourceTree = "<group>"; };
		3ED8929515878AF9006D87F7 /* NSNotificationCenter+MainThread.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSNotificationCenter+MainThread.m"; sourceTree = "<group>"; };
		3ED8929615878AF9006D87F7 /* Reachability.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Reachability.h; sourceTree = "<group>"; };
		3ED8929715878AF9006D87F7 /* Reachability.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Reachability.m; sourceTree = "<group>"; };
		3ED8929815878AF9006D87F7 /* SensePlatform.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SensePlatform.m; sourceTree = "<group>"; };
		3ED8929915878AF9006D87F7 /* SensorIds.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SensorIds.m; sourceTree = "<group>"; };
		3ED8929B15878AF9006D87F7 /* Acceleration.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Acceleration.h; sourceTree = "<group>"; };
		3ED8929C15878AF9006D87F7 /* Acceleration.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Acceleration.m; sourceTree = "<group>"; };
		3ED8929D15878AF9006D87F7 /* AccelerationSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AccelerationSensor.h; sourceTree = "<group>"; };
		3ED8929E15878AF9006D87F7 /* AccelerationSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AccelerationSensor.m; sourceTree = "<group>"; };
		3ED8929F15878AF9006D87F7 /* AccelerometerSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AccelerometerSensor.h; sourceTree = "<group>"; };
		3ED892A015878AF9006D87F7 /* AccelerometerSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AccelerometerSensor.m; sourceTree = "<group>"; };
		3ED892A215878AF9006D87F7 /* AntPlusController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = AntPlusController.h; sourceTree = "<group>"; };
		3ED892A315878AF9006D87F7 /* AntPlusController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = AntPlusController.m; sourceTree = "<group>"; };
		3ED892A415878AF9006D87F7 /* BloodPressureSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = BloodPressureSensor.h; sourceTree = "<group>"; };
		3ED892A515878AF9006D87F7 /* BloodPressureSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = BloodPressureSensor.m; sourceTree = "<group>"; };
		3ED892A615878AF9006D87F7 /* FootpodSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FootpodSensor.h; sourceTree = "<group>"; };
		3ED892A715878AF9006D87F7 /* FootpodSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FootpodSensor.m; sourceTree = "<group>"; };
		3ED892A815878AF9006D87F7 /* BatterySensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = BatterySensor.h; sourceTree = "<group>"; };
		3ED892A915878AF9006D87F7 /* BatterySensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = BatterySensor.m; sourceTree = "<group>"; };
		3ED892AA15878AF9006D87F7 /* CallSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CallSensor.h; sourceTree = "<group>"; };
		3ED892AB15878AF9006D87F7 /* CallSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = CallSensor.m; sourceTree = "<group>"; };
		3ED892AC15878AF9006D87F7 /* CompassSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CompassSensor.h; sourceTree = "<group>"; };
		3ED892AD15878AF9006D87F7 /* CompassSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = CompassSensor.m; sourceTree = "<group>"; };
		3ED892AE15878AF9006D87F7 /* ConnectionSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ConnectionSensor.h; sourceTree = "<group>"; };
		3ED892AF15878AF9006D87F7 /* ConnectionSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ConnectionSensor.m; sourceTree = "<group>"; };
		3ED892B015878AF9006D87F7 /* DynamicSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DynamicSensor.h; sourceTree = "<group>"; };
		3ED892B115878AF9006D87F7 /* DynamicSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = DynamicSensor.m; sourceTree = "<group>"; };
		3ED892B215878AF9006D87F7 /* JumpSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = JumpSensor.h; sourceTree = "<group>"; };
		3ED892B315878AF9006D87F7 /* JumpSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = JumpSensor.m; sourceTree = "<group>"; };
		3ED892B415878AF9006D87F7 /* LocationSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = LocationSensor.h; sourceTree = "<group>"; };
		3ED892B515878AF9006D87F7 /* LocationSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = LocationSensor.m; sourceTree = "<group>"; };
		3ED892B615878AF9006D87F7 /* MiscSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = MiscSensor.h; sourceTree = "<group>"; };
		3ED892B715878AF9006D87F7 /* MiscSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = MiscSensor.m; sourceTree = "<group>"; };
		3ED892B815878AF9006D87F7 /* MotionEnergySensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = MotionEnergySensor.h; sourceTree = "<group>"; };
		3ED892B915878AF9006D87F7 /* MotionEnergySensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = MotionEnergySensor.m; sourceTree = "<group>"; };
		3ED892BA15878AF9006D87F7 /* MotionFeaturesSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = MotionFeaturesSensor.h; sourceTree = "<group>"; };
		3ED892BB15878AF9006D87F7 /* MotionFeaturesSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = MotionFeaturesSensor.m; sourceTree = "<group>"; };
		3ED892BC15878AF9006D87F7 /* MovingSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = MovingSensor.h; sourceTree = "<group>"; };
		3ED892BD15878AF9006D87F7 /* MovingSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = MovingSensor.m; sourceTree = "<group>"; };
		3ED892BE15878AF9006D87F7 /* NoiseSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = NoiseSensor.h; sourceTree = "<group>"; };
		3ED892BF15878AF9006D87F7 /* NoiseSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = NoiseSensor.m; sourceTree = "<group>"; };
		3ED892C015878AF9006D87F7 /* OrientationSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = OrientationSensor.h; sourceTree = "<group>"; };
		3ED892C115878AF9006D87F7 /* OrientationSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = OrientationSensor.m; sourceTree = "<group>"; };
		3ED892C215878AF9006D87F7 /* OrientationStateSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = OrientationStateSensor.h; sourceTree = "<group>"; };
		3ED892C315878AF9006D87F7 /* OrientationStateSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = OrientationStateSensor.m; sourceTree = "<group>"; };
		3ED892C415878AF9006D87F7 /* PreferencesSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = PreferencesSensor.h; sourceTree = "<group>"; };
		3ED892C515878AF9006D87F7 /* PreferencesSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = PreferencesSensor.m; sourceTree = "<group>"; };
		3ED892C615878AF9006D87F7 /* RotationSensor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RotationSensor.h; sourceTree = "<group>"; };
		3ED892C715878AF9006D87F7 /* RotationSensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = RotationSensor.m; sourceTree = "<group>"; };
		3ED892C815878AF9006D87F7 /* Sensor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Sensor.m; sourceTree = "<group>"; };
		3ED892C915878AF9006D87F7 /* SpatialProvider.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SpatialProvider.h; sourceTree = "<group>"; };
		3ED892CA15878AF9006D87F7 /* SpatialProvider.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SpatialProvider.m; sourceTree = "<group>"; };
		3ED892CB15878AF9006D87F7 /* UserProximity.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = UserProximity.h; sourceTree = "<group>"; };
		3ED892CC15878AF9006D87F7 /* UserProximity.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = UserProximity.m; sourceTree = "<group>"; };
		3ED892CD15878AF9006D87F7 /* SensorStore.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SensorStore.h; sourceTree = "<group>"; };
		3ED892CE15878AF9006D87F7 /* SensorStore.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = SensorStore.m; sourceTree = "<group>"; };
		3ED892CF15878AF9006D87F7 /* Settings.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Settings.m; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		3EAA854D158778290036ACC4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3EAA8554158778290036ACC4 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3EAA8560158778290036ACC4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3EAA8567158778290036ACC4 /* SenTestingKit.framework in Frameworks */,
				3EAA856A158778290036ACC4 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		3E0171D115878B7B00857B7A /* Resources */ = {
			isa = PBXGroup;
			children = (
				3E0171D8158790B700857B7A /* SensePlatform-Info.plist */,
				3E0171D215878B9400857B7A /* CommonSense.plist */,
				3E0171D315878B9400857B7A /* Settings.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		3E61A8F41587941F007AD39D /* Other Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = "Other Frameworks";
			sourceTree = "<group>";
		};
		3EAA8544158778290036ACC4 = {
			isa = PBXGroup;
			children = (
				3ED8928915878AF9006D87F7 /* sense platform */,
				3ED8927C15878AB1006D87F7 /* json */,
				3ED8925C158789D9006D87F7 /* include */,
				3EAA856F158778290036ACC4 /* sense platformTests */,
				3EAA8552158778290036ACC4 /* Frameworks */,
				3EAA8565158778290036ACC4 /* Products */,
				3E0171D115878B7B00857B7A /* Resources */,
			);
			sourceTree = "<group>";
		};
		3EAA8552158778290036ACC4 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				3EAA8553158778290036ACC4 /* Foundation.framework */,
				3EAA8566158778290036ACC4 /* SenTestingKit.framework */,
				3E61A8F41587941F007AD39D /* Other Frameworks */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		3EAA8565158778290036ACC4 /* Products */ = {
			isa = PBXGroup;
			children = (
				3EAA8564158778290036ACC4 /* SensePlatformTests.octest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		3EAA856F158778290036ACC4 /* sense platformTests */ = {
			isa = PBXGroup;
			children = (
				3EAA8575158778290036ACC4 /* sense_platformTests.h */,
				3EAA8576158778290036ACC4 /* sense_platformTests.m */,
				3EAA8570158778290036ACC4 /* Supporting Files */,
			);
			path = "sense platformTests";
			sourceTree = "<group>";
		};
		3EAA8570158778290036ACC4 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				3EAA8571158778290036ACC4 /* SensePlatformTests-Info.plist */,
				3EAA8572158778290036ACC4 /* InfoPlist.strings */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		3ED8925C158789D9006D87F7 /* include */ = {
			isa = PBXGroup;
			children = (
				3ED8925D158789D9006D87F7 /* ApplicationStateChange.h */,
				3ED8925E158789D9006D87F7 /* json */,
				3ED89266158789D9006D87F7 /* SensePlatform.h */,
				3ED89267158789D9006D87F7 /* Sensor.h */,
				3ED89268158789D9006D87F7 /* SensorIds.h */,
				3ED89269158789D9006D87F7 /* Settings.h */,
			);
			path = include;
			sourceTree = "<group>";
		};
		3ED8925E158789D9006D87F7 /* json */ = {
			isa = PBXGroup;
			children = (
			);
			path = json;
			sourceTree = "<group>";
		};
		3ED8927C15878AB1006D87F7 /* json */ = {
			isa = PBXGroup;
			children = (
				3E61A91F15879B40007AD39D /* NSObject+SBJson.h */,
				3E61A92015879B40007AD39D /* NSObject+SBJson.m */,
				3E61A92115879B40007AD39D /* SBJson.h */,
				3E61A92215879B40007AD39D /* SBJsonParser.h */,
				3E61A92315879B40007AD39D /* SBJsonParser.m */,
				3E61A92415879B40007AD39D /* SBJsonStreamParser.h */,
				3E61A92515879B40007AD39D /* SBJsonStreamParser.m */,
				3E61A92615879B40007AD39D /* SBJsonStreamParserAccumulator.h */,
				3E61A92715879B40007AD39D /* SBJsonStreamParserAccumulator.m */,
				3E61A92815879B40007AD39D /* SBJsonStreamParserAdapter.h */,
				3E61A92915879B40007AD39D /* SBJsonStreamParserAdapter.m */,
				3E61A92A15879B40007AD39D /* SBJsonStreamParserState.h */,
				3E61A92B15879B40007AD39D /* SBJsonStreamParserState.m */,
				3E61A92C15879B40007AD39D /* SBJsonStreamWriter.h */,
				3E61A92D15879B40007AD39D /* SBJsonStreamWriter.m */,
				3E61A92E15879B40007AD39D /* SBJsonStreamWriterAccumulator.h */,
				3E61A92F15879B40007AD39D /* SBJsonStreamWriterAccumulator.m */,
				3E61A93015879B40007AD39D /* SBJsonStreamWriterState.h */,
				3E61A93115879B40007AD39D /* SBJsonStreamWriterState.m */,
				3E61A93215879B40007AD39D /* SBJsonTokeniser.h */,
				3E61A93315879B40007AD39D /* SBJsonTokeniser.m */,
				3E61A93415879B40007AD39D /* SBJsonUTF8Stream.h */,
				3E61A93515879B40007AD39D /* SBJsonUTF8Stream.m */,
				3E61A93615879B40007AD39D /* SBJsonWriter.h */,
				3E61A93715879B40007AD39D /* SBJsonWriter.m */,
				3E61A95115879B85007AD39D /* JSON.h */,
			);
			path = json;
			sourceTree = "<group>";
		};
		3ED8928915878AF9006D87F7 /* sense platform */ = {
			isa = PBXGroup;
			children = (
				3ED8928A15878AF9006D87F7 /* ApplicationStateChange.m */,
				3ED8929815878AF9006D87F7 /* SensePlatform.m */,
				3ED8929215878AF9006D87F7 /* DataStore.h */,
				3ED8929915878AF9006D87F7 /* SensorIds.m */,
				3ED892CD15878AF9006D87F7 /* SensorStore.h */,
				3ED892CE15878AF9006D87F7 /* SensorStore.m */,
				3ED892CF15878AF9006D87F7 /* Settings.m */,
				3ED8928B15878AF9006D87F7 /* communication */,
				3ED8929315878AF9006D87F7 /* misc */,
				3ED8929A15878AF9006D87F7 /* sensors */,
			);
			path = "sense platform";
			sourceTree = "<group>";
		};
		3ED8928B15878AF9006D87F7 /* communication */ = {
			isa = PBXGroup;
			children = (
				3ED8928C15878AF9006D87F7 /* ActivitySender.h */,
				3ED8928D15878AF9006D87F7 /* ActivitySender.m */,
				3ED8928E15878AF9006D87F7 /* NSString+MD5Hash.h */,
				3ED8928F15878AF9006D87F7 /* NSString+MD5Hash.m */,
				3ED8929015878AF9006D87F7 /* Sender.h */,
				3ED8929115878AF9006D87F7 /* Sender.m */,
			);
			path = communication;
			sourceTree = "<group>";
		};
		3ED8929315878AF9006D87F7 /* misc */ = {
			isa = PBXGroup;
			children = (
				3ED8929415878AF9006D87F7 /* NSNotificationCenter+MainThread.h */,
				3ED8929515878AF9006D87F7 /* NSNotificationCenter+MainThread.m */,
				3ED8929615878AF9006D87F7 /* Reachability.h */,
				3ED8929715878AF9006D87F7 /* Reachability.m */,
			);
			path = misc;
			sourceTree = "<group>";
		};
		3ED8929A15878AF9006D87F7 /* sensors */ = {
			isa = PBXGroup;
			children = (
				3ED8929B15878AF9006D87F7 /* Acceleration.h */,
				3ED8929C15878AF9006D87F7 /* Acceleration.m */,
				3ED8929D15878AF9006D87F7 /* AccelerationSensor.h */,
				3ED8929E15878AF9006D87F7 /* AccelerationSensor.m */,
				3ED8929F15878AF9006D87F7 /* AccelerometerSensor.h */,
				3ED892A015878AF9006D87F7 /* AccelerometerSensor.m */,
				3ED892A115878AF9006D87F7 /* ant+ */,
				3ED892A815878AF9006D87F7 /* BatterySensor.h */,
				3ED892A915878AF9006D87F7 /* BatterySensor.m */,
				3ED892AA15878AF9006D87F7 /* CallSensor.h */,
				3ED892AB15878AF9006D87F7 /* CallSensor.m */,
				3ED892AC15878AF9006D87F7 /* CompassSensor.h */,
				3ED892AD15878AF9006D87F7 /* CompassSensor.m */,
				3ED892AE15878AF9006D87F7 /* ConnectionSensor.h */,
				3ED892AF15878AF9006D87F7 /* ConnectionSensor.m */,
				3ED892B015878AF9006D87F7 /* DynamicSensor.h */,
				3ED892B115878AF9006D87F7 /* DynamicSensor.m */,
				3ED892B215878AF9006D87F7 /* JumpSensor.h */,
				3ED892B315878AF9006D87F7 /* JumpSensor.m */,
				3ED892B415878AF9006D87F7 /* LocationSensor.h */,
				3ED892B515878AF9006D87F7 /* LocationSensor.m */,
				3ED892B615878AF9006D87F7 /* MiscSensor.h */,
				3ED892B715878AF9006D87F7 /* MiscSensor.m */,
				3ED892B815878AF9006D87F7 /* MotionEnergySensor.h */,
				3ED892B915878AF9006D87F7 /* MotionEnergySensor.m */,
				3ED892BA15878AF9006D87F7 /* MotionFeaturesSensor.h */,
				3ED892BB15878AF9006D87F7 /* MotionFeaturesSensor.m */,
				3ED892BC15878AF9006D87F7 /* MovingSensor.h */,
				3ED892BD15878AF9006D87F7 /* MovingSensor.m */,
				3ED892BE15878AF9006D87F7 /* NoiseSensor.h */,
				3ED892BF15878AF9006D87F7 /* NoiseSensor.m */,
				3ED892C015878AF9006D87F7 /* OrientationSensor.h */,
				3ED892C115878AF9006D87F7 /* OrientationSensor.m */,
				3ED892C215878AF9006D87F7 /* OrientationStateSensor.h */,
				3ED892C315878AF9006D87F7 /* OrientationStateSensor.m */,
				3ED892C415878AF9006D87F7 /* PreferencesSensor.h */,
				3ED892C515878AF9006D87F7 /* PreferencesSensor.m */,
				3ED892C615878AF9006D87F7 /* RotationSensor.h */,
				3ED892C715878AF9006D87F7 /* RotationSensor.m */,
				3ED892C815878AF9006D87F7 /* Sensor.m */,
				3ED892C915878AF9006D87F7 /* SpatialProvider.h */,
				3ED892CA15878AF9006D87F7 /* SpatialProvider.m */,
				3ED892CB15878AF9006D87F7 /* UserProximity.h */,
				3ED892CC15878AF9006D87F7 /* UserProximity.m */,
			);
			path = sensors;
			sourceTree = "<group>";
		};
		3ED892A115878AF9006D87F7 /* ant+ */ = {
			isa = PBXGroup;
			children = (
				3ED892A215878AF9006D87F7 /* AntPlusController.h */,
				3ED892A315878AF9006D87F7 /* AntPlusController.m */,
				3ED892A415878AF9006D87F7 /* BloodPressureSensor.h */,
				3ED892A515878AF9006D87F7 /* BloodPressureSensor.m */,
				3ED892A615878AF9006D87F7 /* FootpodSensor.h */,
				3ED892A715878AF9006D87F7 /* FootpodSensor.m */,
			);
			path = "ant+";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		3EAA854E158778290036ACC4 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3ED8926A158789D9006D87F7 /* ApplicationStateChange.h in Headers */,
				3ED89272158789D9006D87F7 /* SensePlatform.h in Headers */,
				3ED89273158789D9006D87F7 /* Sensor.h in Headers */,
				3ED89274158789D9006D87F7 /* SensorIds.h in Headers */,
				3ED89275158789D9006D87F7 /* Settings.h in Headers */,
				3E61A96015879C34007AD39D /* NSObject+SBJson.h in Headers */,
				3E61A96115879C38007AD39D /* SBJson.h in Headers */,
				3E61A96215879C3D007AD39D /* SBJsonParser.h in Headers */,
				3E61A96315879C41007AD39D /* SBJsonStreamParser.h in Headers */,
				3E61A96415879C46007AD39D /* SBJsonStreamParserAccumulator.h in Headers */,
				3E61A96515879C4B007AD39D /* SBJsonStreamParserAdapter.h in Headers */,
				3E61A96615879C54007AD39D /* SBJsonStreamParserState.h in Headers */,
				3E61A96815879C62007AD39D /* SBJsonStreamWriterAccumulator.h in Headers */,
				3E61A96915879C66007AD39D /* SBJsonStreamWriterState.h in Headers */,
				3E61A96A15879C81007AD39D /* SBJsonTokeniser.h in Headers */,
				3E61A96715879C5A007AD39D /* SBJsonStreamWriter.h in Headers */,
				3E61A96B15879C94007AD39D /* JSON.h in Headers */,
				3E22A48A1588CFC6001A9318 /* SBJsonWriter.h in Headers */,
				3ED892D115878AF9006D87F7 /* ActivitySender.h in Headers */,
				3ED892D315878AF9006D87F7 /* NSString+MD5Hash.h in Headers */,
				3ED892D515878AF9006D87F7 /* Sender.h in Headers */,
				3ED892D715878AF9006D87F7 /* DataStore.h in Headers */,
				3ED892D815878AF9006D87F7 /* NSNotificationCenter+MainThread.h in Headers */,
				3ED892DA15878AF9006D87F7 /* Reachability.h in Headers */,
				3ED892DE15878AF9006D87F7 /* Acceleration.h in Headers */,
				3ED892E015878AF9006D87F7 /* AccelerationSensor.h in Headers */,
				3ED892E215878AF9006D87F7 /* AccelerometerSensor.h in Headers */,
				3ED892E415878AF9006D87F7 /* AntPlusController.h in Headers */,
				3ED892E615878AF9006D87F7 /* BloodPressureSensor.h in Headers */,
				3ED892E815878AF9006D87F7 /* FootpodSensor.h in Headers */,
				3ED892EA15878AF9006D87F7 /* BatterySensor.h in Headers */,
				3ED892EC15878AF9006D87F7 /* CallSensor.h in Headers */,
				3ED892EE15878AF9006D87F7 /* CompassSensor.h in Headers */,
				3ED892F015878AF9006D87F7 /* ConnectionSensor.h in Headers */,
				3ED892F215878AF9006D87F7 /* DynamicSensor.h in Headers */,
				3ED892F415878AF9006D87F7 /* JumpSensor.h in Headers */,
				3ED892F615878AF9006D87F7 /* LocationSensor.h in Headers */,
				3ED892F815878AF9006D87F7 /* MiscSensor.h in Headers */,
				3ED892FA15878AF9006D87F7 /* MotionEnergySensor.h in Headers */,
				3ED892FC15878AF9006D87F7 /* MotionFeaturesSensor.h in Headers */,
				3ED892FE15878AF9006D87F7 /* MovingSensor.h in Headers */,
				3ED8930015878AF9006D87F7 /* NoiseSensor.h in Headers */,
				3ED8930215878AF9006D87F7 /* OrientationSensor.h in Headers */,
				3ED8930415878AF9006D87F7 /* OrientationStateSensor.h in Headers */,
				3ED8930615878AF9006D87F7 /* PreferencesSensor.h in Headers */,
				3ED8930815878AF9006D87F7 /* RotationSensor.h in Headers */,
				3ED8930B15878AF9006D87F7 /* SpatialProvider.h in Headers */,
				3ED8930D15878AF9006D87F7 /* UserProximity.h in Headers */,
				3ED8930F15878AF9006D87F7 /* SensorStore.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		3EAA8551158778290036ACC4 /* SensePlatform */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3EAA857A158778290036ACC4 /* Build configuration list for PBXNativeTarget "SensePlatform" */;
			buildPhases = (
				3EAA854B158778290036ACC4 /* ShellScript */,
				3EAA854C158778290036ACC4 /* Sources */,
				3EAA854D158778290036ACC4 /* Frameworks */,
				3EAA854E158778290036ACC4 /* Headers */,
				3EAA854F158778290036ACC4 /* Resources */,
				3EAA8550158778290036ACC4 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SensePlatform;
			productName = "sense platform";
			productType = "com.apple.product-type.framework.static";
		};
		3EAA8563158778290036ACC4 /* SensePlatformTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3EAA857D158778290036ACC4 /* Build configuration list for PBXNativeTarget "SensePlatformTests" */;
			buildPhases = (
				3EAA855F158778290036ACC4 /* Sources */,
				3EAA8560158778290036ACC4 /* Frameworks */,
				3EAA8561158778290036ACC4 /* Resources */,
				3EAA8562158778290036ACC4 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
				3EAA856C158778290036ACC4 /* PBXTargetDependency */,
				3EAA856E158778290036ACC4 /* PBXTargetDependency */,
			);
			name = SensePlatformTests;
			productName = "sense platformTests";
			productReference = 3EAA8564158778290036ACC4 /* SensePlatformTests.octest */;
			productType = "com.apple.product-type.bundle";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		3EAA8546158778290036ACC4 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0430;
			};
			buildConfigurationList = 3EAA8549158778290036ACC4 /* Build configuration list for PBXProject "SensePlatform" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 3EAA8544158778290036ACC4;
			productRefGroup = 3EAA8565158778290036ACC4 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				3EAA8551158778290036ACC4 /* SensePlatform */,
				3EAA8563158778290036ACC4 /* SensePlatformTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		3EAA854F158778290036ACC4 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3E0171D415878B9400857B7A /* CommonSense.plist in Resources */,
				3E0171D515878B9400857B7A /* Settings.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3EAA8561158778290036ACC4 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3EAA8574158778290036ACC4 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		3EAA854B158778290036ACC4 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /usr/bin/python;
			shellScript = "import logging\nimport os\nimport subprocess\n\nlog = logging.getLogger('UFW')\n\ndef get_slave_environment(local_platform, other_platform):\n    ignored = ['LD_MAP_FILE_PATH']\n    build_root = os.environ['BUILD_ROOT']\n    temp_root = os.environ['TEMP_ROOT']\n    newenv = {}\n    for key, value in os.environ.items():\n        if key not in ignored and not key.startswith('LINK_FILE_LIST_'):\n            if build_root in value or temp_root in value:\n                newenv[key] = value.replace(local_platform, other_platform)\n    return newenv\n\ndef get_other_platform():\n    local_platform = os.environ['PLATFORM_NAME']\n    other_platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n    other_platforms.remove(local_platform)\n    return other_platforms[0]\n\ndef get_slave_project_clean_command():\n    local_platform = os.environ['PLATFORM_NAME']\n    other_platform = get_other_platform()\n\n    sdk_version = os.environ['SDK_NAME']\n    if not sdk_version.startswith(local_platform):\n        raise Exception(\"%s didn't start with %s\" % (sdk_version, local_platform))\n    sdk_version = sdk_version[len(local_platform):]\n\n    cmd = [\"xcodebuild\",\n           \"-project\",\n           os.environ['PROJECT_FILE_PATH'],\n           \"-target\",\n           os.environ['TARGET_NAME'],\n           \"-configuration\",\n           os.environ['CONFIGURATION'],\n           \"-sdk\",\n           other_platform + sdk_version]\n    cmd += [\"%s=%s\" % (key, value) for key, value in get_slave_environment(local_platform, other_platform).items()]\n    cmd += [\"UFW_MASTER_PLATFORM=\" + os.environ['PLATFORM_NAME']]\n    cmd += ['clean']\n    return cmd\n\ndef print_and_call_slave_build(cmd):\n    separator = '=== CLEAN NATIVE TARGET '\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0].split(separator)\n    if len(result) == 1:\n        result = result[0]\n    else:\n        result = separator + result[1]\n    log.info(\"Cmd \" + \" \".join(cmd) + \"\\n\" + result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\ndef is_master():\n    return os.environ.get('UFW_MASTER_PLATFORM', os.environ['PLATFORM_NAME']) == os.environ['PLATFORM_NAME']\n\nif __name__ == \"__main__\":\n    # TAG: CLEAN SCRIPT (do not remove this comment)\n\n    exe_path = os.environ['BUILT_PRODUCTS_DIR'] + \"/\" + os.environ['EXECUTABLE_PATH']\n\n    log_handler = logging.StreamHandler()\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (M \" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n    log.addHandler(log_handler)\n    log.setLevel(logging.INFO)\n\n    if is_master() and not os.path.exists(exe_path):\n        log.info(\"Platform %s was cleaned. Cleaning %s as well.\" % (os.environ['PLATFORM_NAME'], get_other_platform()))\n        print_and_call_slave_build(get_slave_project_clean_command())\n";
		};
		3EAA8550158778290036ACC4 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /usr/bin/python;
			shellScript = "import logging\n\n\n### Configuration ###\n\n# Minimum log level\n#\n# Recommended setting: logging.INFO\n#\nconfig_log_level = logging.INFO\n\n# If true, ensures that all public headers are stored in the framework under\n# the same directory hierarchy as they were in the source tree.\n#\n# Xcode by default places all headers at the same top level, but every other\n# build tool  in the known universe preserves directory structure. For simple\n# libraries it doesn't really matter much, but for ports of existing software\n# packages or for bigger libraries, it makes sense to have more structure.\n#\n# Recommended setting: True\n#\nconfig_deep_header_hierarchy = True\n\n# Specify where the top of the public header hierarchy is. This path is\n# relative to the project's dir (PROJECT_DIR). You can reference environment\n# variables using templating syntax (e.g. \"${TARGET_NAME}/Some/Subdir\")\n#\n# NOTE: Only used if config_deep_header_hierarchy is True.\n#\n# If this is set to None, the script will attempt to figure out for itself\n# where the top of the header hierarchy is by looking for common path prefixes\n# in the public header files. This process can fail if:\n# - You only have one public header file.\n# - Your source header files don't all have a common root.\n#\n# A common approach is to use \"${TARGET_NAME}\", working under the assumption\n# that all of your header files share the common root of a directory under\n# your project with the same name as your target (which is the Xcode default).\n#\n# Recommended setting: \"${TARGET_NAME}\"\n#\nconfig_deep_header_top = \"${TARGET_NAME}\"\n\n# Warn when \"DerivedData\" is detected in any of the header, library, or\n# framework search paths. In almost all cases, references to directories under\n# DerivedData are added as a result of an Xcode bug and must be manually\n# removed.\n#\n# Recommended setting: True\n#\nconfig_warn_derived_data = True\n\n# Warn if no headers were marked public in this framework.\n#\n# Recommended setting: True\n#\nconfig_warn_no_public_headers = True\n\n# Cause the build to fail if any warnings are issued.\n#\n# Recommended setting: True\n#\nconfig_fail_on_warnings = True\n\n\n\n##############################################################################\n#\n# Don't touch anything below here unless you know what you're doing.\n#\n##############################################################################\n\nimport json\nimport os\nimport shlex\nimport shutil\nimport string\nimport subprocess\nimport sys\nimport time\nimport traceback\nimport collections\nimport re\n\n\n# Globals\n\nlog = logging.getLogger('UFW')\n\nissued_warnings = False\n\n\n# Maintains the inter-build state of a project.\n#\n# One copy of the build state file is kept in the \"Objects\" dir for each\n# platform. This ensures that cleaning any of the platforms will invalidate\n# the build state.\n#\nclass BuildState:\n\n    def __init__(self):\n        self.platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n        self.reload()\n\n    def reset(self):\n        self.platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n        self.last_completion = 0\n        self.slave_platform = None\n        self.slave_architectures = []\n        self.slave_linked_archive_paths = []\n        self.slave_built_fw_path = None\n        self.slave_built_embedded_fw_path = None\n\n    def set_slave_properties(self, architectures,\n                             linked_archive_paths,\n                             built_fw_path,\n                             built_embedded_fw_path):\n        self.slave_platform = os.environ['PLATFORM_NAME']\n        self.slave_architectures = architectures\n        self.slave_linked_archive_paths = linked_archive_paths\n        self.slave_built_fw_path = built_fw_path\n        self.slave_built_embedded_fw_path = built_embedded_fw_path\n\n    def get_platform_path(self, platform):\n        return \"%s/%s-%s/%s.build/Objects-%s/ufw_build_state.json\" % (os.environ['PROJECT_TEMP_DIR'],\n                os.environ['CONFIGURATION'],\n                platform,\n                os.environ['PRODUCT_NAME'],\n                os.environ['CURRENT_VARIANT'])\n\n    def persist(self):\n        for platform in self.platforms:\n            self.save_to_json(self.get_platform_path(platform))\n\n    def reload(self):\n        self.reset()\n        dicts = [self.load_from_json(self.get_platform_path(platform)) for platform in self.platforms]\n        # If dicts don't all agree or couldn't be loaded, start a fresh build state.\n        if not dicts[1:] == dicts[:-1] or dicts[0] is None:\n            log.debug(\"Data not found or corrupt. Resetting\")\n            self.reset()\n        else:\n            self.__dict__ = dict(self.__dict__.items() + dicts[0].items())\n\n    def load_from_json(self, filename):\n        if os.path.exists(filename):\n            with open(filename, \"r\") as f:\n                return json.loads(f.read())\n        return None\n\n    def save_to_json(self, filename):\n        parent = os.path.dirname(filename)\n        if not os.path.isdir(parent):\n            os.makedirs(parent)\n        with open(filename, \"w\") as f:\n            f.write(json.dumps(self.__dict__))\n\n\n# Holds information about the current project and build environment.\n#\nclass Project:\n\n    def __init__(self, filename):\n        self.project_data = self.load_from_file(filename)\n        self.target = filter(lambda x: x['name'] == os.environ['TARGET_NAME'], self.project_data['targets'])[0]\n        self.public_headers = self.get_build_phase_files('PBXHeadersBuildPhase', lambda x: x.get('settings', False) and x['settings'].get('ATTRIBUTES', False) and 'Public' in x['settings']['ATTRIBUTES'])\n        self.static_libraries = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'archive.ar' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.static_frameworks = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'wrapper.framework' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.compilable_sources = self.get_build_phase_files('PBXSourcesBuildPhase', lambda x: x['fileRef']['fileType'].startswith('sourcecode.c.'))\n        self.header_paths = [x['fullPath'] for x in self.public_headers]\n\n        self.build_state = None\n        self.headers_dir = \"%s/%s/Headers\" % (os.environ['BUILT_PRODUCTS_DIR'], os.environ['CONTENTS_FOLDER_PATH'])\n        self.libtool_path = \"%s/usr/bin/libtool\" % os.environ['DT_TOOLCHAIN_DIR']\n        self.project_filename = \"%s/%s\" % (os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\")\n        self.local_exe_path = os.environ['BUILT_PRODUCTS_DIR'] + \"/\" + os.environ['EXECUTABLE_PATH']\n        self.local_architectures = os.environ['ARCHS'].split(' ')\n        self.local_built_fw_path = os.environ['BUILT_PRODUCTS_DIR'] + \"/\" + os.environ['WRAPPER_NAME']\n        self.local_built_embedded_fw_path = os.path.splitext(self.local_built_fw_path)[0] + \".embeddedframework\"\n        self.local_linked_archive_paths = [self.get_linked_ufw_archive_path(arch) for arch in self.local_architectures]\n        self.local_platform = os.environ['PLATFORM_NAME']\n        other_platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n        other_platforms.remove(self.local_platform)\n        self.other_platform = other_platforms[0]\n\n        sdk_name = os.environ['SDK_NAME']\n        if not sdk_name.startswith(self.local_platform):\n            raise Exception(\"%s didn't start with %s\" % (sdk_name, self.local_platform))\n        self.sdk_version = sdk_name[len(self.local_platform):]\n\n    # Load an Xcode project file\n    def load_from_file(self, filename):\n        project_file = json.loads(subprocess.check_output([\"plutil\", \"-convert\", \"json\", \"-o\", \"-\", filename]))\n        for obj in project_file['objects'].values():\n            self.fix_keys(obj)\n        self.unflatten_object(project_file['objects'], project_file)\n        project_data = project_file['rootObject']\n        self.build_full_paths(project_data['mainGroup'], [], [])\n        return project_data\n\n    # Store the full path to a node inside the node as \"fullPath\", and another\n    # raw copy as \"fullPathRaw\". Also recurse into that node if it's a group.\n    # The raw copy may contain directory structure fragments (e.g. \"some/path\")\n    #\n    def build_full_paths(self, node, base_path, base_path_split):\n        if node.get('path', False):\n            base_path = base_path + [node['path']]\n            base_path_split = base_path_split + node['path'].split('/')\n        node['fullPathRaw'] = base_path\n        node['fullPath'] = base_path_split\n        if node['isa'] == 'PBXGroup':\n            for child in node['children']:\n                self.build_full_paths(child, base_path, base_path_split)\n\n    # Get an object by its flat reference, or just return the \"key\" if it\n    # isn't actually a key (24 char hexadecimal).\n    def dereference(self, all_objects, key):\n        if isinstance(key, basestring) and len(key) == 24 and re.search('^[0-9a-fA-F]+$', key):\n            return all_objects[key]\n        return key\n\n    # Convert the Xcode flat key-value object layout to a deep layout\n    def unflatten_object(self, all_objects, current_obj):\n        if isinstance(current_obj, collections.Mapping):\n            for key, value in current_obj.items():\n                new_value = self.dereference(all_objects, value)\n                if current_obj[key] != new_value or not isinstance(new_value, collections.Mapping):\n                    current_obj[key] = new_value\n                    self.unflatten_object(all_objects, new_value)\n        elif isinstance(current_obj, collections.Iterable) and not isinstance(current_obj, basestring):\n            for idx, value in enumerate(current_obj):\n                new_value = self.dereference(all_objects, value)\n                if current_obj[idx] != new_value:\n                    current_obj[idx] = self.dereference(all_objects, value)\n                    self.unflatten_object(all_objects, current_obj[idx])\n\n    # Fix up any inconvenient keys\n    def fix_keys(self, obj):\n        key_remappings = {'lastKnownFileType': 'fileType', 'explicitFileType': 'fileType'}\n        for key in list(set(key_remappings.keys()) & set(obj.keys())):\n            obj[key_remappings[key]] = obj[key]\n            del obj[key]\n\n    # Get the files from a build phase\n    def get_build_phase_files(self, build_phase_name, filter_func):\n        build_phase = filter(lambda x: x['isa'] == build_phase_name, self.target['buildPhases'])[0]\n        build_files = filter(filter_func, build_phase['files'])\n        return [x['fileRef'] for x in build_files]\n\n    # Get the truncated paths of all headers that start with the specified\n    # relative path. Paths are read and returned as fully separated lists.\n    # e.g. ['Some', 'Path', 'To', 'A', 'Header'] with relative_path of\n    # ['Some', 'Path'] gets truncated to ['To', 'A', 'Header']\n    #\n    def movable_headers_relative_to(self, relative_path):\n        rel_path_length = len(relative_path)\n        result = filter(lambda path: len(path) >= rel_path_length and\n                                     path[:rel_path_length] == relative_path, self.header_paths)\n        return [path[rel_path_length:] for path in result]\n\n    # Get the full path to where a linkable archive (library or framework)\n    # is supposed to be.\n    def get_linked_archive_path(self, architecture):\n        return \"%s/%s/%s\" % (os.environ['OBJECT_FILE_DIR_%s' % os.environ['CURRENT_VARIANT']],\n                             architecture,\n                             os.environ['EXECUTABLE_NAME'])\n\n    # Get the full path to our custom linked archive of the project\n    def get_linked_ufw_archive_path(self, architecture):\n        return self.get_linked_archive_path(architecture) + \".ufwbuild\"\n\n    # Get the full path to the executable of an archive\n    def get_exe_path(self, node):\n        path = os.environ['SOURCE_ROOT'] + \"/\" + \"/\".join(node['fullPath'])\n        if node['fileType'] == 'wrapper.framework':\n            # Frameworks are directories, so go one deeper\n            path += \"/\" + os.path.splitext(node['fullPath'][-1])[0]\n        return path\n\n    # Command to link all objects of a single architecture\n    def get_link_single_arch_command(self, architecture):\n        cmd = [\"%s/usr/bin/libtool\" % os.environ['DT_TOOLCHAIN_DIR'],\n               \"-static\",\n               \"-arch_only\", architecture,\n               \"-syslibroot\", os.environ['SDKROOT'],\n               \"-L%s\" % os.environ['BUILT_PRODUCTS_DIR'],\n               \"-filelist\", os.environ['LINK_FILE_LIST_%s_%s' % (os.environ['CURRENT_VARIANT'], architecture)]]\n        if os.environ.get('OTHER_LDFLAGS', False):\n            cmd += [os.environ['OTHER_LDFLAGS']]\n        if os.environ.get('WARNING_LDFLAGS', False):\n            cmd += [os.environ['WARNING_LDFLAGS']]\n        cmd += [\"-o\", self.get_linked_ufw_archive_path(architecture)]\n        return cmd\n\n    # Command to link all archives into a universal archive\n    def get_final_link_command(self):\n        cmd = [\"%s/usr/bin/libtool\" % os.environ['DT_TOOLCHAIN_DIR'],\n               \"-static\"]\n        cmd += self.local_linked_archive_paths + self.build_state.slave_linked_archive_paths\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", \"%s/%s\" % (os.environ['BUILT_PRODUCTS_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Build up an environment for the slave process. This uses BUILD_ROOT\n    # and TEMP_ROOT to convert all environment variables to values suitable\n    # for the slave build environment so that xcodebuild doesn't try to build\n    # in the project directory under \"build\".\n    #\n    def get_slave_environment(self):\n        ignored = ['LD_MAP_FILE_PATH']\n        build_root = os.environ['BUILD_ROOT']\n        temp_root = os.environ['TEMP_ROOT']\n        newenv = {}\n        for key, value in os.environ.items():\n            if key not in ignored and not key.startswith('LINK_FILE_LIST_'):\n                if build_root in value or temp_root in value:\n                    newenv[key] = value.replace(self.local_platform, self.other_platform)\n        return newenv\n\n    # Command to invoke xcodebuild on the slave platform.\n    def get_slave_project_build_command(self):\n        cmd = [\"xcodebuild\",\n               \"-project\",\n               os.environ['PROJECT_FILE_PATH'],\n               \"-target\",\n               os.environ['TARGET_NAME'],\n               \"-configuration\",\n               os.environ['CONFIGURATION'],\n               \"-sdk\",\n               self.other_platform + self.sdk_version]\n        cmd += [\"%s=%s\" % (key, value) for key, value in self.get_slave_environment().items()]\n        cmd += [\"UFW_MASTER_PLATFORM=\" + os.environ['PLATFORM_NAME']]\n        cmd += [os.environ['ACTION']]\n        return cmd\n\n\n# Utility Functions\n\ndef is_master():\n    return os.environ.get('UFW_MASTER_PLATFORM', os.environ['PLATFORM_NAME']) == os.environ['PLATFORM_NAME']\n\n# Remove all subdirectories under a path.\ndef remove_subdirs(path, ignore_files):\n    if os.path.exists(path):\n        for filename in filter(lambda x: x not in ignore_files, os.listdir(path)):\n            fullpath = path + \"/\" + filename\n            if os.path.isdir(fullpath):\n                log.info(\"Remove %s\" % fullpath)\n                shutil.rmtree(fullpath)\n\ndef ensure_parent_exists(path):\n    parent = os.path.dirname(path)\n    if not os.path.isdir(parent):\n        os.makedirs(parent)\n\ndef ensure_path_exists(path):\n    if not os.path.isdir(path):\n        os.makedirs(path)\n\ndef remove_path(path):\n    if os.path.exists(path):\n        if os.path.isdir(path):\n            shutil.rmtree(path)\n        else:\n            os.remove(path)\n\ndef move_file(src, dst):\n    if src == dst or not os.path.isfile(src):\n        return\n    log.info(\"Move %s to %s\" % (src, dst))\n    ensure_parent_exists(dst)\n    remove_path(dst)\n    shutil.move(src, dst)\n\ndef copy_overwrite(src, dst):\n    remove_path(dst)\n    ensure_parent_exists(dst)\n    shutil.copytree(src, dst, symlinks=True)\n\ndef attempt_symlink(link_path, link_to):\n    # Only allow linking to an existing file\n    os.stat(os.path.abspath(link_path + \"/../\" + link_to))\n\n    # Only make the link if it hasn't already been made\n    if not os.path.exists(link_path):\n        log.info(\"Symlink %s -> %s\" % (link_path, link_to))\n        os.symlink(link_to, link_path)\n\n# Takes the last entry in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef top_level_file_path(base_path, path_list):\n    return base_path + \"/\" + os.path.split(path_list[-1])[-1]\n\n# Takes all entries in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef full_file_path(base_path, path_list):\n    return base_path + \"/\" + \"/\".join(path_list)\n\n# Print a command before executing it.\n# Also print out all output from the command to STDOUT.\n#\ndef print_and_call(cmd):\n    log.info(\"Cmd \" + \" \".join(cmd))\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    log.info(p.communicate()[0])\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Special print-and-call command for the slave build that strips out\n# xcodebuild's spammy list of environment variables.\n#\ndef print_and_call_slave_build(cmd, other_platform):\n    separator = '=== BUILD NATIVE TARGET '\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0].split(separator)\n    if len(result) == 1:\n        result = result[0]\n    else:\n        result = separator + result[1]\n    log.info(\"Cmd \" + \" \".join(cmd) + \"\\n\" + result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\ndef issue_warning(msg, *args, **kwargs):\n    global issued_warnings\n    issued_warnings = True\n    log.warn(msg, *args, **kwargs)\n\n\n# Main Application\n\n# DerivedData should almost never appear in any framework, library, or header\n# search paths. However, Xcode will sometimes add them in, so we check to make\n# sure.\n#\ndef check_for_derived_data_in_search_paths():\n    search_path_keys = [\"FRAMEWORK_SEARCH_PATHS\", \"LIBRARY_SEARCH_PATHS\", \"HEADER_SEARCH_PATHS\"]\n    for path_key in search_path_keys:\n        path = os.environ[path_key]\n        if \"DerivedData\" in path and \"/../\" in path:\n            issue_warning(\"'%s' contains reference to 'DerivedData'.\" % path_key)\n\n# Check to make sure nothing has been recompiled since we last linked.\ndef are_link_targets_clean(project):\n    try:\n        for arch in project.local_architectures:\n            link_time = os.path.getmtime(project.get_linked_archive_path(arch))\n            ufw_time = os.path.getmtime(project.get_linked_ufw_archive_path(arch))\n            if not link_time or not ufw_time or link_time > ufw_time:\n                return False\n    except OSError:\n        return False\n    return True\n\ndef relink_project(project):\n    for arch in project.local_architectures:\n        print_and_call(project.get_link_single_arch_command(arch))\n\n    if is_master():\n        print_and_call(project.get_final_link_command())\n\n# Xcode by default throws all public headers into the top level directory.\n# This function moves them to their expected deep hierarchy.\n#\ndef build_deep_header_hierarchy(project):\n    header_path_top = config_deep_header_top\n    if not header_path_top:\n        header_path_top = os.path.commonprefix(project.header_paths)\n    else:\n        header_path_top = header_path_top.split('/')\n\n    built_headers_path = os.environ['BUILT_PRODUCTS_DIR'] + \"/\" + os.environ['PUBLIC_HEADERS_FOLDER_PATH']\n    movable_headers = project.movable_headers_relative_to(header_path_top)\n\n    # Remove subdirs if they only contain files that have been rebuilt\n    ignore_headers = filter(lambda x: not os.path.isfile(top_level_file_path(built_headers_path, x)), movable_headers)\n    remove_subdirs(built_headers_path, [file[0] for file in ignore_headers])\n\n    # Move rebuilt headers into their proper subdirs\n    for header in movable_headers:\n        move_file(top_level_file_path(built_headers_path, header), full_file_path(built_headers_path, header))\n\ndef add_symlinks_to_framework(project):\n    base_dir = project.local_built_fw_path + \"/\"\n    attempt_symlink(base_dir + \"Versions/Current\", os.environ['FRAMEWORK_VERSION'])\n    if os.path.isdir(base_dir + \"Versions/Current/Headers\"):\n        attempt_symlink(base_dir + \"Headers\", \"Versions/Current/Headers\")\n    if os.path.isdir(base_dir + \"Versions/Current/Resources\"):\n        attempt_symlink(base_dir + \"Resources\", \"Versions/Current/Resources\")\n    attempt_symlink(base_dir + os.environ['EXECUTABLE_NAME'], \"Versions/Current/\" + os.environ['EXECUTABLE_NAME'])\n\ndef run_slave_build(project):\n    print_and_call_slave_build(project.get_slave_project_build_command(), project.other_platform)\n\ndef build_embedded_framework(project):\n    fw_path = project.local_built_fw_path\n    embedded_path = project.local_built_embedded_fw_path\n    fw_name = os.environ['WRAPPER_NAME']\n    remove_path(embedded_path)\n    ensure_path_exists(embedded_path)\n    copy_overwrite(fw_path, embedded_path + \"/\" + fw_name)\n    ensure_path_exists(embedded_path + \"/Resources\")\n    symlink_source = \"../\" + fw_name + \"/Resources/\"\n    symlink_path = embedded_path + \"/Resources/\"\n    if os.path.isdir(fw_path + \"/Resources\"):\n        for file in filter(lambda x: x != \"Info.plist\" and not x.endswith(\".lproj\"), os.listdir(fw_path + \"/Resources\")):\n            attempt_symlink(symlink_path + file, symlink_source + file)\n\ndef run_build(build_state):\n\n    project = Project(\"%s/%s\" % (os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\"))\n\n    rebuild_needed = True\n\n    if is_master():\n        log.debug(\"Building as MASTER\")\n\n        if len(project.compilable_sources) == 0:\n            raise Exception(\"No compilable sources found. Please add at least one source file to build target %s.\" % os.environ['TARGET_NAME'])\n\n        if config_warn_derived_data:\n            check_for_derived_data_in_search_paths()\n        if config_warn_no_public_headers and len(project.public_headers) == 0:\n            issue_warning('No headers in build target %s were marked public. Please move at least one header to \"Public\" in the \"Copy Headers\" build phase.' % os.environ['TARGET_NAME'])\n\n        if os.path.exists(project.local_exe_path):\n            rebuild_needed = os.path.getmtime(project.local_exe_path) > build_state.last_completion\n    else:\n        log.debug(\"Building as SLAVE\")\n\n    if rebuild_needed:\n        if is_master():\n            build_state.persist()\n            run_slave_build(project)\n            build_state.reload()\n        else:\n            build_state.set_slave_properties(project.local_architectures,\n                                             project.local_linked_archive_paths,\n                                             project.local_built_fw_path,\n                                             project.local_built_embedded_fw_path)\n\n        project.build_state = build_state\n\n        if not are_link_targets_clean(project):\n            relink_project(project)\n\n        if config_deep_header_hierarchy:\n            build_deep_header_hierarchy(project)\n\n        add_symlinks_to_framework(project)\n        build_embedded_framework(project)\n\n        if is_master():\n            # Copy to slave side.\n            copy_overwrite(project.local_built_fw_path, build_state.slave_built_fw_path)\n            copy_overwrite(project.local_built_embedded_fw_path, build_state.slave_built_embedded_fw_path)\n\n            build_state.reset()\n            build_state.last_completion = time.time()\n\n\nif __name__ == \"__main__\":\n    # TAG: BUILD SCRIPT (do not remove this comment)\n\n    log_handler = logging.StreamHandler()\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n    log.addHandler(log_handler)\n    log.setLevel(config_log_level)\n\n    error_code = 0\n    build_state = BuildState()\n    prefix = \"M\" if is_master() else \"S\"\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + prefix + \" \" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n\n    log.debug(\"Begin build process\")\n\n    if config_deep_header_top:\n        config_deep_header_top = string.Template(config_deep_header_top).substitute(os.environ)\n\n    try:\n        run_build(build_state)\n        if issued_warnings:\n            if config_fail_on_warnings:\n                error_code = 1\n            log.warn(\"Build completed with warnings\")\n        else:\n            log.info(\"Build completed\")\n    except Exception:\n        traceback.print_exc(file=sys.stdout)\n        build_state.reset()\n        error_code = 1\n        log.error(\"Build failed\")\n    finally:\n        build_state.persist()\n        sys.exit(error_code)\n";
		};
		3EAA8562158778290036ACC4 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Run the unit tests in this test bundle.\n\"${SYSTEM_DEVELOPER_DIR}/Tools/RunUnitTests\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		3EAA854C158778290036ACC4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3E61A95A15879C0C007AD39D /* SBJsonStreamWriter.m in Sources */,
				3E61A95415879BE9007AD39D /* NSObject+SBJson.m in Sources */,
				3ED892D015878AF9006D87F7 /* ApplicationStateChange.m in Sources */,
				3ED892D215878AF9006D87F7 /* ActivitySender.m in Sources */,
				3ED892D415878AF9006D87F7 /* NSString+MD5Hash.m in Sources */,
				3ED892D615878AF9006D87F7 /* Sender.m in Sources */,
				3ED892D915878AF9006D87F7 /* NSNotificationCenter+MainThread.m in Sources */,
				3ED892DB15878AF9006D87F7 /* Reachability.m in Sources */,
				3ED892DC15878AF9006D87F7 /* SensePlatform.m in Sources */,
				3ED892DD15878AF9006D87F7 /* SensorIds.m in Sources */,
				3ED892DF15878AF9006D87F7 /* Acceleration.m in Sources */,
				3ED892E115878AF9006D87F7 /* AccelerationSensor.m in Sources */,
				3ED892E315878AF9006D87F7 /* AccelerometerSensor.m in Sources */,
				3ED892E515878AF9006D87F7 /* AntPlusController.m in Sources */,
				3ED892E715878AF9006D87F7 /* BloodPressureSensor.m in Sources */,
				3ED892E915878AF9006D87F7 /* FootpodSensor.m in Sources */,
				3ED892EB15878AF9006D87F7 /* BatterySensor.m in Sources */,
				3ED892ED15878AF9006D87F7 /* CallSensor.m in Sources */,
				3ED892EF15878AF9006D87F7 /* CompassSensor.m in Sources */,
				3ED892F115878AF9006D87F7 /* ConnectionSensor.m in Sources */,
				3ED892F315878AF9006D87F7 /* DynamicSensor.m in Sources */,
				3ED892F515878AF9006D87F7 /* JumpSensor.m in Sources */,
				3ED892F715878AF9006D87F7 /* LocationSensor.m in Sources */,
				3ED892F915878AF9006D87F7 /* MiscSensor.m in Sources */,
				3ED892FB15878AF9006D87F7 /* MotionEnergySensor.m in Sources */,
				3ED892FD15878AF9006D87F7 /* MotionFeaturesSensor.m in Sources */,
				3ED892FF15878AF9006D87F7 /* MovingSensor.m in Sources */,
				3ED8930115878AF9006D87F7 /* NoiseSensor.m in Sources */,
				3ED8930315878AF9006D87F7 /* OrientationSensor.m in Sources */,
				3ED8930515878AF9006D87F7 /* OrientationStateSensor.m in Sources */,
				3ED8930715878AF9006D87F7 /* PreferencesSensor.m in Sources */,
				3ED8930915878AF9006D87F7 /* RotationSensor.m in Sources */,
				3ED8930A15878AF9006D87F7 /* Sensor.m in Sources */,
				3ED8930C15878AF9006D87F7 /* SpatialProvider.m in Sources */,
				3ED8930E15878AF9006D87F7 /* UserProximity.m in Sources */,
				3ED8931015878AF9006D87F7 /* SensorStore.m in Sources */,
				3ED8931115878AF9006D87F7 /* Settings.m in Sources */,
				3E61A95515879BF7007AD39D /* SBJsonParser.m in Sources */,
				3E61A95615879BFB007AD39D /* SBJsonStreamParser.m in Sources */,
				3E61A95715879BFF007AD39D /* SBJsonStreamParserAccumulator.m in Sources */,
				3E61A96C15879D65007AD39D /* SBJsonStreamParserState.m in Sources */,
				3E61A95815879C03007AD39D /* SBJsonStreamParserAdapter.m in Sources */,
				3E61A96D15879D7D007AD39D /* SBJsonUTF8Stream.m in Sources */,
				3E61A95B15879C0F007AD39D /* SBJsonStreamWriterAccumulator.m in Sources */,
				3E61A95C15879C13007AD39D /* SBJsonStreamWriterState.m in Sources */,
				3E61A95D15879C16007AD39D /* SBJsonTokeniser.m in Sources */,
				3E61A95F15879C1D007AD39D /* SBJsonWriter.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3EAA855F158778290036ACC4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3EAA8577158778290036ACC4 /* sense_platformTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		3EAA856C158778290036ACC4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 3EAA8551158778290036ACC4 /* SensePlatform */;
			targetProxy = 3EAA856B158778290036ACC4 /* PBXContainerItemProxy */;
		};
		3EAA856E158778290036ACC4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 3EAA8551158778290036ACC4 /* SensePlatform */;
			targetProxy = 3EAA856D158778290036ACC4 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		3EAA8572158778290036ACC4 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				3EAA8573158778290036ACC4 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		3EAA8578158778290036ACC4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_ENABLE_OBJC_ARC = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		3EAA8579158778290036ACC4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_ENABLE_OBJC_ARC = YES;
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		3EAA857B158778290036ACC4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					armv6,
					"$(ARCHS_STANDARD_32_BIT)",
				);
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_SEARCH_PATHS = "$(inherited)";
				FRAMEWORK_VERSION = A;
				GCC_PREFIX_HEADER = "";
				GCC_THUMB_SUPPORT = NO;
				INFOPLIST_FILE = "SensePlatform-Info.plist";
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = SensePlatform;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		3EAA857C158778290036ACC4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					armv6,
					"$(ARCHS_STANDARD_32_BIT)",
				);
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_SEARCH_PATHS = "$(inherited)";
				FRAMEWORK_VERSION = A;
				GCC_PREFIX_HEADER = "";
				GCC_THUMB_SUPPORT = NO;
				INFOPLIST_FILE = "SensePlatform-Info.plist";
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = SensePlatform;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		3EAA857E158778290036ACC4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(SDKROOT)/Developer/Library/Frameworks",
					"$(DEVELOPER_LIBRARY_DIR)/Frameworks",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "sense platform/sense platform-Prefix.pch";
				INFOPLIST_FILE = "sense platformTests/SensePlatformTests-Info.plist";
				PRODUCT_NAME = SensePlatformTests;
				WRAPPER_EXTENSION = octest;
			};
			name = Debug;
		};
		3EAA857F158778290036ACC4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(SDKROOT)/Developer/Library/Frameworks",
					"$(DEVELOPER_LIBRARY_DIR)/Frameworks",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "sense platform/sense platform-Prefix.pch";
				INFOPLIST_FILE = "sense platformTests/SensePlatformTests-Info.plist";
				PRODUCT_NAME = SensePlatformTests;
				WRAPPER_EXTENSION = octest;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		3EAA8549158778290036ACC4 /* Build configuration list for PBXProject "SensePlatform" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3EAA8578158778290036ACC4 /* Debug */,
				3EAA8579158778290036ACC4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3EAA857A158778290036ACC4 /* Build configuration list for PBXNativeTarget "SensePlatform" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3EAA857B158778290036ACC4 /* Debug */,
				3EAA857C158778290036ACC4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3EAA857D158778290036ACC4 /* Build configuration list for PBXNativeTarget "SensePlatformTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3EAA857E158778290036ACC4 /* Debug */,
				3EAA857F158778290036ACC4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 3EAA8546158778290036ACC4 /* Project object */;
}
